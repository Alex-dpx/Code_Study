#!/bin/bash

# This file will focus on the usage of "sed".

file="Test.txt"

echo -e "hello\nnew world\nknow myself\nstudy" > $file
# Sed matches rows. So add/delete are all deal after the line.
# ( preprocess ---> not deal in file)
sed '3atry to add this line' $file
sed '3,4!d' $file			# delete lines except 3-4
sed '/123/d' $file  		# delete lines matching "123"
# (process ---> -i)
sed -i '1,3{/123/d}' $file	# delete line 1~3 which matching "123"
sed -i '/^$/d' $file		# delete blank lines



echo -e "KD is MVP. He deserve MVP.\nMVP MVP!!!" > $file
# replace the first A of every line(only first one) ----> sed 's/A/B/'
cat $file | sed 's/MVP/killer/'
cat $file | sed -r 's/^M[A-Z]*/killer/' 	# [-r : --regexp-extended] is for Regular Expression
# replace all the A ----> sed 's/A/B/g'
cat $file | sed 's/MVP/killer/g'

# U can also use 's:A:B:g' 's|A|B|g' to separate the context.


echo -e "abc def lo hi 123 498\nyes no we ca 911 120" > $file
# replace the Xth one ----> sed -r 's/A/B/X'
cat $file | sed -r 's:[a-z]+:000:2'		# abc 000 123 498
cat $file | sed -r 's:[a-z]:000:2'  	# a123c def 123 498
# replace from the Xth one ----> sed ''
cat $file | sed -r 's/[a-z]+/000/3g'


# '&' as match, u can do more things.
head -1 $file | sed 's:[^ ]*:(&):g'


echo -e "abc\nABC\nPINK" > $file
# sed as grep
cat $file | sed -n '1,3p'		# line 1-3
cat $file | sed -n '$p' 		# the last line
cat $file | sed -n '/abc/Ip'	# ignore upper and lower case
# '-e' combine 'xxx' with 'vvv' in sed
cat $file | sed -e 's:PINK:pink:2' -e 's/b/B/'



# Print the number of lines not started with "#" in current dir.
sed 's/^#.*//' `ls .` | grep -v '^$' | wc -l


# Remove test file
rm -f $file
